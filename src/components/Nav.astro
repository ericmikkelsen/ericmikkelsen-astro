---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE } from "../consts";
import shuffleArray from "../modules/shuffleArray";

const delays = shuffleArray(['0s','.05s','.1s']);
const currentDelay = '.275s';
const currentPath = Astro.url.pathname;
const links = [
    {
        text: "ericmikkelsen.com",
        url: "/",
        delay: '',
        current: false,
    },
    {
        text: "blog",
        url: "/blog/",
        delay: '',
        current: false,
    },
    {
        text: "resume",
        url: "/resume/",
        delay: '',
        current: false,
    },
    {
        text: "projects",
        url: "/projects/",
        delay: '',
        current: false,

    },
].map(link => {
    const current = link.url === currentPath;
    const relatedLink = current || currentPath.startsWith(link.url) && link.url !== '/'
    if(relatedLink) {
        link.delay = currentDelay
    } else {
        link.delay = delays[0]
        delays.shift();
    }
    link.current = current
    return link
});

---
<style>
    nav {
        /* background-color: rgba(255,255,255,.8); */
        box-sizing: border-box;
        font-weight: 700;
        margin: clamp(1rem, 5vw, 3rem);
        margin-left: 0;
        max-width: calc(100% - clamp(1rem, 5vw, 3rem));
        padding: 0 5%;
        padding: clamp(1rem, 5vw, 3rem);
        padding-bottom: 0;
        padding-right: 0;
        text-wrap: pretty;
        width: max-content;
    }
    a {
        aspect-ratio: 1/1;
        border-radius: 100rem;
        display: inline-block;
        margin-bottom: 5%;
        margin-bottom: clamp(1rem, 5vw, 3rem);
        margin-right: 5%;
        margin-right: clamp(1rem, 5vw, 3rem);
        outline: none;
        position: relative;
        text-decoration: none;
        transition-timing-function: ease-in-out;
        -webkit-tap-highlight-color: rgba(0,0,0,0);
    }
    a:focus-visible > * {
        outline: 0.125em solid #000;
        outline-offset: -0.5em;
    }
    a:active .link-target > * {
        transform: translateY(0.125em);
    }
    @keyframes fadeInAnimation {
        80% {transform: scale(1.1)}
        100% { transform: scale(1) }
    }
    .link-target {
        align-items: center;
        aspect-ratio: 1/1;
        background: #fff;
        border: .25rem solid #000;
        border-radius: 100rem;
        color: #000;
        display: inline-flex;
        font-size: var(--step-0);
        justify-content: center;
        min-width: 2.75rem;
        padding: 2.5vw;
        position: relative;
        text-align: center;
        text-decoration: none;
        transform: rotate(30deg);
        z-index: 10;
    }
    [aria-current] .link-target {
        background-color: #085;
    }
    @media (prefers-reduced-motion: no-preference) {
        .link-target {
            animation: fadeInAnimation ease .2s;
            animation-iteration-count: 1;
            animation-fill-mode: forwards;
            animation-timing-function: ease-out;
            transform: scale(0);
        }
    }
    a:nth-child(1) .link-target {
        animation-delay: var(--nav-1-delay, 0s);
    }
    a:nth-child(2) .link-target {
        animation-delay: .15s;
        animation-delay: var(--nav-2-delay, .15s);
    }
    a:nth-child(3) .link-target {
        animation-delay: .05s;
        animation-delay: var(--nav-3-delay, .05s);
    }
    a:nth-child(4) .link-target {
        /* background-color: #d40; */
        animation-delay: .1s;
        animation-delay: var(--nav-4-delay, .1s);
    }
    .link-target::before {
        content: "";
        display: block;
        position: absolute;
        width: 130%;
        height: 130%;
        background-color: inherit;
        opacity: 1;
        border-radius: inherit;
        transform: scale(0.76923076923);
        opacity: .75;
        transition: transform .25s;
        transition-timing-function: ease-in;
        box-sizing: initial; 
        z-index: -1;
    }
    a:not([aria-current]):hover .link-target::before {
        transform: scale(1);
        transition-timing-function: ease-out;
    }
    [aria-current] .link-target {
        border-color: currentColor;
    }
    .link-target span {
        border-bottom: 0.25em solid;
        line-height: 1.1;
        transition: 0.125s;
    }
    [aria-current] .link-target span {
        border-bottom-color: transparent;
        top: .25em;
        position: relative;
    }
</style>
<nav class="rounded-right">
    {
        links.map((link,index) => {
            const i = index + 1;
            return (
                <a href={link.url} aria-current={link.current ? 'page' : null}>
                    <span class="link-target" style={`--nav-${i}-delay:${link.delay}`}>
                        <span>{link.text}</span>
                    </span>
                </a>
            );
        })
    }
</nav>
